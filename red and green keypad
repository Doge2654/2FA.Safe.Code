const int greenLEDPin = 12;    // 绿色 LED 引脚
const int redLEDPin   = 13;    // 红色 LED 引脚

// 设置密码
String pasword1 = "12345";  // 你可以替换为任何密码
String pasword2 = "";       // 当前输入的密码

// 4x4 键盘的行列定义
const int ROW1 = 9;
const int ROW2 = 8;
const int ROW3 = 7;
const int ROW4 = 6;
const int COL1 = 5;
const int COL2 = 4;
const int COL3 = 3;
const int COL4 = 2;

// 定义按键值
char keys[4][4] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

void setup() {
  Serial.begin(9600);
  
  // 设置 LED 为输出
  pinMode(greenLEDPin, OUTPUT);
  pinMode(redLEDPin, OUTPUT);
  
  // 初始关闭 LED
  digitalWrite(greenLEDPin, LOW);
  digitalWrite(redLEDPin, LOW);

  // 设置行引脚为输出，列引脚为输入并启用上拉电阻
  pinMode(ROW1, OUTPUT);
  pinMode(ROW2, OUTPUT);
  pinMode(ROW3, OUTPUT);
  pinMode(ROW4, OUTPUT);

  pinMode(COL1, INPUT_PULLUP);
  pinMode(COL2, INPUT_PULLUP);
  pinMode(COL3, INPUT_PULLUP);
  pinMode(COL4, INPUT_PULLUP);

  // 初始将所有行设为 HIGH
  digitalWrite(ROW1, HIGH);
  digitalWrite(ROW2, HIGH);
  digitalWrite(ROW3, HIGH);
  digitalWrite(ROW4, HIGH);

  Serial.println("Please enter password:");
}

void loop() {
  // 扫描每一行
  for (int i = 0; i < 4; i++) {
    // 将所有行先拉高
    digitalWrite(ROW1, HIGH);
    digitalWrite(ROW2, HIGH);
    digitalWrite(ROW3, HIGH);
    digitalWrite(ROW4, HIGH);

    // 将当前行拉低
    if (i == 0) digitalWrite(ROW1, LOW);
    if (i == 1) digitalWrite(ROW2, LOW);
    if (i == 2) digitalWrite(ROW3, LOW);
    if (i == 3) digitalWrite(ROW4, LOW);

    // 检测列是否有按键按下
    if (digitalRead(COL1) == LOW) {
      keyPressed(i, 0);
      delay(200); // 防抖动延时
    }
    if (digitalRead(COL2) == LOW) {
      keyPressed(i, 1);
      delay(200);
    }
    if (digitalRead(COL3) == LOW) {
      keyPressed(i, 2);
      delay(200);
    }
    if (digitalRead(COL4) == LOW) {
      keyPressed(i, 3);
      delay(200);
    }
  }
}

void keyPressed(int row, int col) {
  // 获取按键值
  char key = keys[row][col];
  Serial.print("Key pressed: ");
  Serial.println(key);

  // 当按下 * 和 # 以外的键时，将其添加到输入密码中
  if (key != '*' && key != '#') {
    pasword2 += key;
    Serial.println("Current password input: " + pasword2);
  }

  // 按下 * 键后确认密码
  if (key == '*') {
    if (pasword2 == pasword1) {
      Serial.println("Password correct!");
      // 密码正确：点亮绿色 LED 7 秒
      digitalWrite(greenLEDPin, HIGH);
      delay(7000);
      digitalWrite(greenLEDPin, LOW);
    } else {
      Serial.println("Incorrect password!");
      // 密码错误：点亮红色 LED 7 秒
      digitalWrite(redLEDPin, HIGH);
      delay(7000);
      digitalWrite(redLEDPin, LOW);
    }
    pasword2 = "";  // 清空输入的密码
  }

  // 按下 # 键时清除输入密码
  if (key == '#') {
    pasword2 = "";
    Serial.println("Password input cleared.");
  }
}
